{
    "openapi": "3.0.3",
    "info": {
        "title": "API for Tasks",
        "description": "This is a sample of an API Server written in NodeJS with Express you can find the source code [here](https://github.com/VictorRodas99/rest-api-node.js)",
        "contact": {
            "email": "victormatiasrodas100@gmail.com"
        },
        "version": "1.0.0"
    },
    "tags": [
        {
            "name": "task",
            "description": "Everything about the user tasks"
        },
        {
            "name": "user",
            "description": "Operations about user"
        }
    ],
    "paths": {
        "/api/v1/tasks": {
            "get": {
                "tags": [
                    "task"
                ],
                "summary": "Find all the user tasks",
                "description": "Find all the user tasks",
                "parameters": [
                    {
                        "name": "idUser",
                        "in": "cookies",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "username",
                        "in": "cookies",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "requestedAt": {
                                            "type": "date",
                                            "format": "date-time",
                                            "example": "2022-12-17T22:36:33.008Z"
                                        },
                                        "username": {
                                            "type": "string",
                                            "example": "Bonnie"
                                        },
                                        "totalTasks": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "totalCompleted": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 0
                                        },
                                        "tasks": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "task"
                ],
                "summary": "Add a new task",
                "description": "Add a new user task to the database",
                "operationId": "createTasks",
                "parameters": [
                    {
                        "name": "idUser",
                        "in": "cookies",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Create a new task",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task 2 created"
                                        },
                                        "createdAt": {
                                            "type": "date",
                                            "format": "date-time",
                                            "example": "2022-12-17T22:36:33.008Z"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Completed field only accepts 'true' or 'false'"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error has ocurred"
                                        },
                                        "createdAt": {
                                            "type": "date",
                                            "format": "date-time",
                                            "example": "2022-12-17T22:36:33.008Z"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/{id}": {
            "get": {
                "tags": [
                    "task"
                ],
                "summary": "Finds Tasks by ID",
                "description": "The id number of the task can be provided",
                "operationId": "id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task with id 4 not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The id must be a positive number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "task"
                ],
                "summary": "Update an existing task",
                "description": "Update an existing task by Id",
                "oprationId": "updateTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "idUser",
                        "in": "cookies",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update an existent user task in the database",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New title for this task"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sucessfull update!"
                                        },
                                        "updatedAt": {
                                            "type": "date",
                                            "format": "date-time",
                                            "example": "2022-12-17T22:36:33.008Z"
                                        },
                                        "updatedFields": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "title"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid or missing title"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task with id 4 not found or given fields are the same that the original"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "task"
                ],
                "summary": "Deletes a task",
                "description": "delete a task from the database",
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "idUser",
                        "in": "cookies",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task 2 deleted!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The id must be a positive number"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task with id 4 not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                    
                }
            }
        },
        "/api": {
            "get": {
                "summary": "Entry point",
                "description": "This is the entry point that shows a friendly message",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Welcome!"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid or missing title"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "bonnie@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "hola123H"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Welcome Bonnie!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid email/password supplied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Wrong email and password combination!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not registered!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs out current logged in user session",
                "description": "",
                "operationId": "logoutUser",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Task": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "title": {
                        "type": "string",
                        "example": "Sort images by name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Sort images by name creating a simple script with Python"
                    },
                    "completed": {
                        "type": "boolean",
                        "example": false
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 12
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 12
                    },
                    "name": {
                        "type": "string",
                        "example": "Bonnie"
                    },
                    "email": {
                        "type": "string",
                        "example": "bonnie@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "hola123H"
                    }
                }
            }
        }
    }
}